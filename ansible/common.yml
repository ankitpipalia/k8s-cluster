---
- hosts: all
  remote_user: root
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
    - name: disable swap
      shell: |
        sudo swapoff -a
        sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
          overlay
          br_netfilter

    - name: Create containerd config file
      file:
        path: "/etc/sysctl.d/kubernetes.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/kubernetes.conf"
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: modprobe
      shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter
        printf "\n10.0.0.4 k8s-master\n10.0.0.5 k8s-1\n10.0.0.6 k8s-2\n\n" >> /etc/hosts

    - name: reset system permission
      shell: sudo sysctl --system

    - name: install ebtables and ethtool
      shell: |
        sudo apt-get update
        sudo apt-get install -y ethtool ebtables

    - name: Apply new settings
      command: sudo sysctl --system

    - name: Ansible apt to install curl and other packages
      apt:
        update_cache: yes
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present

    - name: configure dependencies
      shell: |
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

    - name: install containerd
      shell: |
        sudo apt-get update && sudo apt-get install -y containerd.io
        sudo mkdir -p /etc/containerd
        sudo containerd config default | sudo tee /etc/containerd/config.toml
        sudo systemctl daemon-reload
        sudo systemctl restart containerd
        sudo systemctl enable containerd

    - name: Configure containerd so that it starts using systemd as cgroup
      shell: |
        containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
        sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Create kubernetes repo file
      file:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        state: "touch"

    - name: Add K8s Source
      blockinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        block: deb http://apt.kubernetes.io/ kubernetes-xenial main

    - name: Install k8s packages
      apt:
        update_cache: yes
        name:
          - kubectl
          - kubeadm
          - kubelet
        state: present

    - name: hold kubernetes
      shell: sudo apt-mark hold kubelet kubeadm kubectl

    - name: Create group
      group: name=kube state=present

    - name: create the kube user account
      user: name=kube groups=kube append=yes state=present createhome=yes shell=/bin/bash

    - name: allow 'kube' to use sudo without needing a password
      lineinfile:
        dest: /etc/sudoers
        line: "kube ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"

    - name: reset grp permission
      shell: |
        sudo usermod -aG root kube
        systemctl daemon-reload
        telinit 6
